# Simple workflow for deploying static content to GitHub Pages
name: Update so-info.json

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "30 * * * *"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: write
  contents: write

concurrency:
  group: "so-info"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  update-so-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm modules
        uses: ./.github/actions/install-modules
        with:
          scripts: true

      - name: Ensure website public exists
        shell: bash
        run: |
          mkdir -p ./source/website/public

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ./source/website/public/so-info.json
          key: so-info-
          restore-keys: so-info-

      - name: Hash so-info.json
        id: info-hash
        shell: bash
        run: |
          echo "hash=${{ hashFiles('./source/website/public/so-info.json') }}" >> $GITHUB_OUTPUT

      - name: Update so-info.json
        id: update-info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          cd source/scripts
          npx tsx ./update-so-info.ts

          if [[ "${{ hashFiles('./source/website/public/so-info.json') }}" != "${{ steps.info-hash.outputs.hash }}" ]]; then
            echo "updated=true" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Update so-info.json
        id: update-info-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          if [[ "${{ hashFiles('./source/website/public/so-info.json') }}" != "${{ steps.info-hash.outputs.hash }}" ]]; then
            echo "updated=true" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Trigger deploy if changed
        if: (steps.update-info-check.outputs.updated == 'true')
        id: redeploy
        shell: bash
        run: |
          curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d '{"event_type":"trigger_deploy"}'

      - name: Save cache
        if: (steps.update-info-check.outputs.updated == 'true')
        uses: actions/cache/save@v4
        with:
          path: ./source/website/public/so-info.json
          key: so-info-${{ hashFiles('./source/website/public/so-info.json') }}
