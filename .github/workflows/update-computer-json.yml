# Simple workflow for deploying static content to GitHub Pages
name: Update data from ComputerElite

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron: "36 0 * * *"

# Sets permissions of the GITHUB_TOKEN to allow push and requesting PRs
permissions:
  pull-requests: write
  contents: write
  actions: write

jobs:
  # Single deploy job since we're just deploying
  update-computer-json:
    concurrency:
      group: update-computer-json-${{ github.ref }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm modules
        uses: ./.github/actions/install-modules
        with:
          scripts: true

      - name: Update the mods.json from ComputerElite
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          wget "https://computerelite.github.io/tools/Beat_Saber/mods.json" -O source/website/public/mods.json
          cd source/scripts
          npx tsx ./split.ts 2>&1
          npx tsx ./delete-missing-mods.ts 2>&1
          npx tsx ./update-github-icons.ts 2>&1
          npx tsx ./update-covers.ts 2>&1

      - name: Configure git user
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Make commits for the new mods.
        run: |
          cd source/scripts
          npx tsx ./commit-new-mods.ts 2>&1

      - name: Reset the repository working directory.
        run: |
          git reset --hard

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          title: Update Mods from ComputerElite
          commit-message: Update mods
          branch: update-mods-computer

      - name: Trigger checks
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            ${{ github.api_url }}/repos/${{ github.repository }}/actions/workflows/pr.yml/dispatches \
            -d '{ "ref": "${{ github.ref }}", "inputs": { "pr_number": "${{ steps.create-pr.outputs.pull-request-number }}" }')
          if [ $response -ne 204 ]; then
            echo "Workflow dispatch failed with response code $response"
            exit 1
          fi
