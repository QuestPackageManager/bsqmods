name: Validate Mod Json

on:
  # Runs on pushes targeting the default branch
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      pr_number:
        description: "The PR number to check against"
        default: ""

jobs:
  # Single deploy job since we're just deploying
  test:
    name: pr-check-mods
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      checks: write

    steps:
      - name: Set PR number
        run: |
          if [ "${{ github.event.pull_request.number }}" != "" ]; then
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          fi

          if [ "${{ github.event.client_payload.pr_number }}" != "" ]; then
            echo "PR_NUMBER=${{ github.event.client_payload.pr_number }}" >> $GITHUB_ENV
          fi

          if [ "${{ github.event.inputs.pr_number }}" != "" ]; then
            echo "PR_NUMBER=${{ github.event.inputs.pr_number }}" >> $GITHUB_ENV
          fi

      - name: Check PR number
        run: |
          if [ "$PR_NUMBER" == "" ]; then
            echo "PR number not set"
            false
          fi

      - name: Get PR head SHA
        id: get_head_sha
        run: |
          pr_number="${{ env.PR_NUMBER }}"
          repo="${{ github.repository }}"
          sha=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github+json" \
            "${{ github.api_url }}/repos/$repo/pulls/$pr_number" | jq -r .head.sha)
          echo "head_sha=$sha" >> $GITHUB_OUTPUT
          echo "$sha"
        env:
          GH_TOKEN: ${{ github.token }}
      
      - name: Create check run
        id: create_check
        run: |
          response=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github+json" \
            ${{ github.api_url }}/repos/${{ github.repository }}/check-runs \
            -d '{
              "name": "${{ github.workflow }}",
              "head_sha": "${{ steps.get_head_sha.outputs.head_sha }}",
              "status": "in_progress",
              "details_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "output": {
                "title": "${{ github.workflow }}",
                "summary": "[View action run details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" 
              }
            }')
          check_id=$(echo "$response" | jq -r .id)
          echo "check_id=$check_id" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get changed files
        id: get_changed_files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER/files" | jq -r '.[].filename' > changed-files.txt

      - name: Get the mods folder of the PR
        id: download_mods_json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm -r mods
          wget "https://api.github.com/repos/$GITHUB_REPOSITORY/tarball/pull/$PR_NUMBER/head" -qO - | tar -xzvf - --strip-components=1 --wildcards '*/mods/'

      - name: Install npm modules
        uses: ./.github/actions/install-modules
        with:
          scripts: true

      - name: Validate json
        run: |
          cd source/scripts
          npx tsx ./pr-check.ts

      - name: Mark check run as success
        if: ${{ success() }}
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github+json" \
            ${{ github.api_url }}/repos/${{ github.repository }}/check-runs/${{ steps.create_check.outputs.check_id }} \
            -d '{
              "status": "completed",
              "conclusion": "success"
            }'
      
      - name: Mark check run as failure
        if: ${{ failure() }}
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github+json" \
            ${{ github.api_url }}/repos/${{ github.repository }}/check-runs/${{ steps.create_check.outputs.check_id }} \
            -d '{
              "status": "completed",
              "conclusion": "failure"
            }'

